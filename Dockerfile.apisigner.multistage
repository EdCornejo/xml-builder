## Stage 1 : build with maven builder image with native capabilities
FROM quay.io/quarkus/centos-quarkus-maven:19.3.1-java8 AS build

COPY api /usr/src/app/api
COPY api-core /usr/src/app/api-core
COPY api-signer /usr/src/app/api-signer
COPY core /usr/src/app/core
COPY extensions /usr/src/app/extensions
COPY integration-tests /usr/src/app/integration-tests
COPY rules /usr/src/app/rules
COPY templates /usr/src/app/templates
COPY ui /usr/src/app/ui
COPY pom.xml /usr/src/app

COPY .mvn /usr/src/app/.mvn
COPY mvnw /usr/src/app/mvnw
COPY mvnw.cmd /usr/src/app/mvnw.cmd

USER root
RUN chown -R quarkus /usr/src/app
USER quarkus
RUN /usr/src/app/mvnw -f /usr/src/app/pom.xml -P native,ui,quarkus121Final -Dquarkus.profile=postgresql -DskipTests clean package

## Stage 2 : create the docker final image
FROM registry.access.redhat.com/ubi8/ubi-minimal
WORKDIR /work/
COPY --from=build /usr/src/app/api-signer/target/*-runner /work/application
RUN chmod 775 /work /work/application \
  && chown -R 1001 /work \
  && chmod -R "g+rwX" /work \
  && chown -R 1001:root /work
EXPOSE 8080
USER 1001
CMD ["./application", "-Dquarkus.http.host=0.0.0.0"]
