package rules.invoice;

import org.openublpe.xmlbuilder.models.input.AbstractInputDocumentModel;
import org.openublpe.xmlbuilder.models.input.invoice.InvoiceInputModel;
import org.openublpe.xmlbuilder.models.output.invoice.InvoiceOutputModel;
import org.openublpe.xmlbuilder.models.input.DetalleInputModel;
import org.openublpe.xmlbuilder.models.output.DetalleOutputModel;
import org.openublpe.xmlbuilder.models.ubl.Catalog;
import org.openublpe.xmlbuilder.models.ubl.Catalog7;
import java.util.LinkedList
import java.math.BigDecimal
import org.openublpe.xmlbuilder.models.ubl.Catalog16;

global java.math.BigDecimal IGV;

dialect "java"

rule "Detalle"
when
    $input : InvoiceInputModel(detalle != null)
    $output : InvoiceOutputModel()
then
    $output.setDetalleSize($input.getDetalle().size());

    $output.setDetalle(new LinkedList<>());
    for (DetalleInputModel item : $input.getDetalle()) {
        insert(item);
    }
end

rule "Detalle Item"
when
    $input : InvoiceInputModel(detalle != null)
    $output : InvoiceOutputModel()
    $inputDetalle: DetalleInputModel()
then
    DetalleOutputModel outputDetalle = new DetalleOutputModel();
    $output.getDetalle().add(outputDetalle);

    outputDetalle.setDescripcion($inputDetalle.getDescripcion());
    outputDetalle.setUnidadMedida($inputDetalle.getUnidadMedida() != null ? $inputDetalle.getUnidadMedida() : "NIU");
    outputDetalle.setCantidad($inputDetalle.getCantidad());
    outputDetalle.setPrecioUnitario($inputDetalle.getPrecioUnitario());

    outputDetalle.setTipoIGV(
            $inputDetalle.getTipoIGV() != null
                ? Catalog.valueOfCode(Catalog7.class, $inputDetalle.getTipoIGV()).get()
                : Catalog7.GRAVADO_OPERACION_ONEROSA
    );

    outputDetalle.setTipoPrecio(
            outputDetalle.getTipoIGV().isOperacionOnerosa()
                ? Catalog16.PRECIO_UNITARIO_INCLUYE_IGV
                : Catalog16.VALOR_FERENCIAL_UNITARIO_EN_OPERACIONES_NO_ONEROSAS
    );


    // CÃ¡lculos

    outputDetalle.setTotal(
            $inputDetalle.getCantidad().multiply($inputDetalle.getPrecioUnitario())
    );

    outputDetalle.setIgv(
            outputDetalle.getTipoIGV().isGravado() ? outputDetalle.getTotal().multiply(IGV) : BigDecimal.ZERO
    );


    outputDetalle.setValorUnitario(
            $inputDetalle.getPrecioUnitario().multiply(BigDecimal.ONE.subtract(IGV))
    );

    outputDetalle.setSubtotal(
            $inputDetalle.getCantidad().multiply(outputDetalle.getValorUnitario())
    );


end